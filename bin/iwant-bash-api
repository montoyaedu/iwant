#!/bin/bash

DIALOG=${DIALOG=dialog}
INPUT=/tmp/menu.sh.$$
RES=${IWANT_HOME}/bin/resources

###
###
### FUNCTION abort_if_commant_does_not_exist
###
###

abort_if_commant_does_not_exist() {
    command -v $1 >/dev/null 2>&1 || \
        {
            echo >&2 "I require $1 but it's not installed."
            echo "Aborting..."
            exit 1
        }
}

###
###
### END FUNCTION abort_if_commant_does_not_exist
###
###

###
###
### FUNCTION show_dialog_start
###
###

show_dialog_start() {
    $DIALOG --clear \
        --title "`cat ${RES}/dialog.title`" \
        --yesno "`cat ${RES}/dialog_start.label`" \
        20 40

    case $? in
    0)
        echo "Yes chosen."
        ;;
    1)
        exit 1
        ;;
    255)
        exit 1
        ;;
    esac
}

###
###
### FUNCTION show_dialog_start
###
###

show_dialog_template() {
    $DIALOG --clear \
        --title "iWant Project Generator" \
        --menu "Select template" \
        20 40 \
        2 \
        c# "CSharp Project Template" \
        java "Java Project Template" \
        2>"${INPUT}"
}

get_dialog_result() {
    retval=$(<"${INPUT}")
    echo $retval
}

show_dialog_artifact_details () {
    artifactId=""
    groupId=""
    version="1.0.0"
    versionQualifier="-SNAPSHOT"
 
    # Store data to $VALUES variable
    $DIALOG --ok-label "Ok" \
    --backtitle "iWant Project Generator" \
    --title "Artifact Details" \
    --form "Enter artifact details..." \
    15 50 0 \
    "ArtifactId:"           1 1 "$artifactId"         1 10 10 0 \
    "GroupId:"              2 1 "$groupId"            2 10 15 0 \
    "Version:"              3 1 "$version"            3 10 8  0 \
    "VersionQualifier:"     4 1 "$versionQualifier"   4 10 40 0 \
    2>"${INPUT}"
}
